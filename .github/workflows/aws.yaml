name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-west-2                   
  ECR_REPOSITORY: ai-town-crier           
  ECS_CLUSTER: ai-town-crier
  ECS_TWITTER_TASK_DEFINITION: .github/workflows/twitter_task_def.json
  ECS_LLM_TASK_DEFINITION: .github/workflows/llm_task_def.json
  TWITTER_CONTAINER_NAME: ai-town-crier-twitter
  LLM_CONTAINER_NAME: ai-town-crier-llm


permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS LLM task definition
      id: llm-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_LLM_TASK_DEFINITION }}
        container-name: ${{ env.LLM_CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}
        environment-variables: |
          LOG_LEVEL=DEBUG
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

    - name: Fill in the new image ID in the Amazon ECS Twitter task definition
      id: twitter-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TWITTER_TASK_DEFINITION }}
        container-name: ${{ env.TWITTER_CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}
        environment-variables: |
          LOG_LEVEL=DEBUG
          ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
          BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}
          CONSUMER_KEY=${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET=${{ secrets.CONSUMER_SECRET }}
          
    - name: Deploy Amazon ECS Twitter task definition
      id: deploy-ecs-twitter-task
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.twitter-task-def.outputs.task-definition }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
          
    - name: Deploy Amazon ECS LLM task definition
        id: deploy-ecs-llm-task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.llm-task-def.outputs.task-definition }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
